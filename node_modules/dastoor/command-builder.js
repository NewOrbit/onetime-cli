var Command = require('./command');

function CommandBuilder() {
    this.commandStore = {};
}

CommandBuilder.prototype._get = function (path) {
    return this.commandStore[path];
};

CommandBuilder.prototype._set = function (command) {

    this.commandStore[command.path] = command;

    if(command.parentPath) {
        var parent = this.node(command.parentPath);
        parent.commands.push(command);
    }

    return command;
};

CommandBuilder.prototype.terminal = function (path, controller) {
    return this.node(path, true, controller);
};

CommandBuilder.prototype.node = function (path, terminal, controller) {

    function hydrate(e) {
        e.terminal = !!terminal;
        e.controller = controller;

        return e;
    }

    return hydrate(this._get(path) || this._set(new Command(path)));
};

module.exports = CommandBuilder;
